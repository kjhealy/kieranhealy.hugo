---
author: kjhealy
date: "2002-11-29"
#layout: post
slug: i-switched
status: publish
title: I Switched
wordpress_id: '167'
categories:
- Misc
---

This post is embarrassingly long, and full of geeky crap. Cut to the chase and just [look at the screenshot](http://www.kieranhealy.org/files/misc/FinderScreenSnapz001.html).

I've been thinking about it for a while, and I finally [switched](http://www.apple.com/switch/ "Apple - Switch") to a [TiBook](http://www.apple.com/powerbook/). My old laptop—- a dedicated GNU/Linux machine from a dot-bomb casualty called Tuxtops—- was on its last legs. It's pretty beat up and slow, and doesn't have a lot of RAM. I could have lived with that for a while longer, but recently it developed a disturbing tendency to **turn itself on while closed** and in its case. It wouldn't boot properly in this state (because the lid was shut), but it wouldn't fail gracefully either. Instead it would loop through the BIOS check over and over. The battery would get hotter and hotter, a little alarm would go off, and sparking, fizzing noises could be heard inside. Not good.

So it was time for a change. The question was what to buy. That decision was shaped by three things: (1) The constraints of my (cough) work environment; (2) The value-for-money of the laptop itself; and (3) A preference for free software and a strong desire not to get hooked into any licensing rigmarole with Microsoft.

I should probably also mention (4): A [second-order desire](http://www.wikipedia.org/w/wiki.phtml?title=Second-order_desire&printable=yes) not to give in to my [wanton](http://www.stanford.edu/~aaronson/sectionhandout5.html) self who likes nothing better than putzing around with computers all day, wasting enormous amounts of time installing productivity-enhancing software. Well, not to give in *too* much, anyway.

First, the **work environment**. This evolved through graduate school and has solidified since then. I ain't changing it. All my writing is done in [GNU/Emacs](http://www.gnu.org/software/emacs/emacs.html). Papers and imaginary book manuscripts are processed, inside Emacs, with [LaTeX](http://www.tug.org/), which yields results so much better looking than [Microsoft Word](http://www.microsoft.com/office/word/default.asp) it's not even funny. Emacs and LaTeX interact nicely when you take advantage of other bits of supporting software, especially [BibTeX](http://www.ecst.csuchico.edu/~jacobsd/bib/formats/bibtex.html), [AUCTeX](http://mirrors.sunsite.dk/auctex/www/auctex/) and [RefTeX](http://zon.astro.uva.nl/~dominik/Tools/reftex/).

Besides writing, I crunch numbers. (Far more than I ever thought I would, incidentally—- but the sotware makes it easy to do cool things.) For this, I use [R](http://www.r-project.org/), a program I've [sung the praises of](http://fiachra.soc.arizona.edu/blog/archives/000113.html#000113) before. Thanks to an Emacs package called [ESS](http://software.biostat.washington.edu/statsoft/ess/) (Emacs Speaks Statistics), R can be run happily inside Emacs. Even better, thanks to [Frank Harrell's](http://www.amazon.com/exec/obidos/ASIN/0387952322) efforts (amongst [others](http://www.ci.tuwien.ac.at/~leisch/Sweave/)), there's a big [library](http://hesweb1.med.virginia.edu/biostat/s/Hmisc.html) of functions that allow R to take advantage of LaTeX. So everything is integrated: professional data analysis, editing, report-writing and document processing facilities, all inside a big, powerful editor. Oh, and all of it is free. Any new computer would have to be able to run all this stuff.

A bit of research in the **laptop market** suggested that Apple's [iBook](http://www.apple.com/ibook/) was very good value for money. Their new [Operating System](http://www.apple.com/macosx/) is built on [Darwin](http://developer.apple.com/darwin/), a modified version of [FreeBSD](http://www.freebsd.org/). A lot of hackers have contributed time and skill to getting free software applications to run on OS X in a civilized way. After some initial field-testing on [Laurie's](http://www.u.arizona.edu/~lapaul) desktop G4 Mac, I decided I could install what I wanted without too much effort. Amazingly, I was right.

In the end, I bought a PowerBook and not an iBook because the University Store was selling off previous-generation PowerBooks for cheap.

I got it on Wednesday. Then I started messing with it. The first step was to install the latest version of Apple's [Developer Tools](http://developer.apple.com/macosx/). Then I went and got [fink](http://fink.sourceforge.net/), a package-management system that allows you to install free software in the /sw directory of your Mac. You can either get precompiled binaries (using the **apt-get** command) or get the source code and compile it yourself (using the **fink** command). The former way is much faster; the latter is more advisable given Apple's recent upgrade of OS X —- some of the binary packages are out of date.

With fink in place, I went and got the most important package from somewhere else—- [X-Windows](http://sourceforge.net/projects/xonx/). The [OroborOSX](http://oroborosx.sourceforge.net/) window manager went on top of that. Then it was time to use fink to get [teTeX](http://www.tug.org/teTeX/) (a LaTeX distribution), various packages for making pdf files and some compiliers, most importantly g77, a Fortran compiler needed to install R. Some of these packages took a looong time to compile. And finally Emacs 21 (for X-Windows, even though there are native OS X versions available too), AUCTeX and ESS.

Did it all work first time out? No, of course it didn't. But it didn't take long to iron out the problems. The **acid test** was getting LaTeX to compile my imaginary book, which is long and full of cross-references. Works fine on my Linux box, but the Mac kept choking on it. (Can't say I blame it.) I ended up having to extend TeX's capacity, which took some poking around on Google and the teTeX documentation to sort out. I also learned other small things, like your local texmf tree goes in the Library folder of your User directory, and you have to add /usr/local/bin to your path after you install R. I also had to get the OCAML compiler to install [Unison](http://www.cis.upenn.edu/~bcpierce/unison/), which lets me synchronize my files betwen the laptop, my workstation and my home machine, using a [secure connection](http://www.openssh.com/). Even better, [Keychain](http://www.gentoo.org/proj/en/keychain.xml) lets me do that between trusted machines without having to enter a password over and over again.

**Fascinating, eh?** After about a day of this sort of thing, I was able to produce the all-important [screenshot](http://www.kieranhealy.org/files/misc/FinderScreenSnapz001.html) of everything working as it should. The screenshot's the reason for it all, really.

The upshot of all this—- what a long-winded post—- is that I now have exactly the same work environment as I do on my Linux workstation, plus the ability to seamlessly synchronize them, but I don't have to worry about stupid crap (even by my standards) like having to install kernel drivers to get my CD-burner to work, endlessly messing with [Evolution](http://www.ximian.com/products/evolution/), trying to get it to sync with my Palm Pilot, the numerous bits of interface weirdness that dog Linux, and other stuff even I find too frustrating to put up with. And of course I can now also watch [QuickTime movie trailers](http://www.apple.com/trailers/), which will make me need all that productivity-enhancing software more than ever.
